{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ASUS\\\\Documents\\\\ME\\\\Wallmart-hackathon\\\\walmart-wsscc\\\\frontend\\\\src\\\\components\\\\Scanner\\\\CameraCapture.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useState } from \"react\";\nimport Webcam from \"react-webcam\";\nimport { Dialog, DialogTitle, DialogContent, DialogActions, Button, Box } from \"@mui/material\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst CameraCapture = ({\n  open,\n  onClose,\n  onCapture,\n  onUpload\n}) => {\n  _s();\n  const webcamRef = useRef(null);\n  const fileInputRef = useRef();\n  const [capturedImage, setCapturedImage] = useState(null);\n  const handleCapture = () => {\n    if (webcamRef.current) {\n      const imageSrc = webcamRef.current.getScreenshot();\n      setCapturedImage(imageSrc);\n    }\n  };\n  const handleUpload = () => {\n    if (capturedImage) {\n      onUpload(capturedImage);\n      setCapturedImage(null);\n      onClose();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Dialog, {\n    open: open,\n    onClose: () => {\n      setCapturedImage(null);\n      onClose();\n    },\n    maxWidth: \"sm\",\n    fullWidth: true,\n    children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n      children: \"Capture Image\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n      children: !capturedImage ? /*#__PURE__*/_jsxDEV(Box, {\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\",\n        children: /*#__PURE__*/_jsxDEV(Webcam, {\n          audio: false,\n          ref: webcamRef,\n          screenshotFormat: \"image/png\",\n          width: 400,\n          height: 300,\n          videoConstraints: {\n            facingMode: \"environment\"\n          },\n          style: {\n            width: '100%',\n            maxHeight: 300,\n            background: '#000'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(Box, {\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: capturedImage,\n          alt: \"Captured\",\n          style: {\n            width: '100%',\n            maxHeight: 300\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n      sx: {\n        justifyContent: 'space-between',\n        px: 3,\n        pb: 2\n      },\n      children: [!capturedImage ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"primary\",\n          onClick: handleCapture,\n          children: \"Capture\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"secondary\",\n          onClick: () => fileInputRef.current.click(),\n          children: \"Upload from Gallery\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          accept: \"image/*\",\n          style: {\n            display: \"none\"\n          },\n          ref: fileInputRef,\n          onChange: e => {\n            if (e.target.files && e.target.files[0]) {\n              const reader = new FileReader();\n              reader.onload = ev => setCapturedImage(ev.target.result);\n              reader.readAsDataURL(e.target.files[0]);\n            }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"outlined\",\n          color: \"primary\",\n          onClick: () => setCapturedImage(null),\n          children: \"Retake Image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"success\",\n          onClick: handleUpload,\n          children: \"Upload\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => {\n          setCapturedImage(null);\n          onClose();\n        },\n        children: \"Close\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n_s(CameraCapture, \"TnIhHSPb7lFtN03gCcE5f511jvU=\");\n_c = CameraCapture;\nexport default CameraCapture;\nvar _c;\n$RefreshReg$(_c, \"CameraCapture\");","map":{"version":3,"names":["React","useRef","useState","Webcam","Dialog","DialogTitle","DialogContent","DialogActions","Button","Box","jsxDEV","_jsxDEV","Fragment","_Fragment","CameraCapture","open","onClose","onCapture","onUpload","_s","webcamRef","fileInputRef","capturedImage","setCapturedImage","handleCapture","current","imageSrc","getScreenshot","handleUpload","maxWidth","fullWidth","children","fileName","_jsxFileName","lineNumber","columnNumber","display","flexDirection","alignItems","audio","ref","screenshotFormat","width","height","videoConstraints","facingMode","style","maxHeight","background","src","alt","sx","justifyContent","px","pb","variant","color","onClick","click","type","accept","onChange","e","target","files","reader","FileReader","onload","ev","result","readAsDataURL","_c","$RefreshReg$"],"sources":["C:/Users/ASUS/Documents/ME/Wallmart-hackathon/walmart-wsscc/frontend/src/components/Scanner/CameraCapture.js"],"sourcesContent":["import React, { useRef, useState } from \"react\";\r\nimport Webcam from \"react-webcam\";\r\nimport { Dialog, DialogTitle, DialogContent, DialogActions, Button, Box } from \"@mui/material\";\r\n\r\nconst CameraCapture = ({ open, onClose, onCapture, onUpload }) => {\r\n  const webcamRef = useRef(null);\r\n  const fileInputRef = useRef();\r\n  const [capturedImage, setCapturedImage] = useState(null);\r\n\r\n  const handleCapture = () => {\r\n    if (webcamRef.current) {\r\n      const imageSrc = webcamRef.current.getScreenshot();\r\n      setCapturedImage(imageSrc);\r\n    }\r\n  };\r\n\r\n  const handleUpload = () => {\r\n    if (capturedImage) {\r\n      onUpload(capturedImage);\r\n      setCapturedImage(null);\r\n      onClose();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Dialog open={open} onClose={() => { setCapturedImage(null); onClose(); }} maxWidth=\"sm\" fullWidth>\r\n      <DialogTitle>Capture Image</DialogTitle>\r\n      <DialogContent>\r\n        {!capturedImage ? (\r\n          <Box display=\"flex\" flexDirection=\"column\" alignItems=\"center\">\r\n            <Webcam\r\n              audio={false}\r\n              ref={webcamRef}\r\n              screenshotFormat=\"image/png\"\r\n              width={400}\r\n              height={300}\r\n              videoConstraints={{ facingMode: \"environment\" }}\r\n              style={{ width: '100%', maxHeight: 300, background: '#000' }}\r\n            />\r\n          </Box>\r\n        ) : (\r\n          <Box display=\"flex\" flexDirection=\"column\" alignItems=\"center\">\r\n            <img src={capturedImage} alt=\"Captured\" style={{ width: '100%', maxHeight: 300 }} />\r\n          </Box>\r\n        )}\r\n      </DialogContent>\r\n      <DialogActions sx={{ justifyContent: 'space-between', px: 3, pb: 2 }}>\r\n        {!capturedImage ? (\r\n          <>\r\n            <Button variant=\"contained\" color=\"primary\" onClick={handleCapture}>Capture</Button>\r\n            <Button variant=\"contained\" color=\"secondary\" onClick={() => fileInputRef.current.click()}>Upload from Gallery</Button>\r\n            <input\r\n              type=\"file\"\r\n              accept=\"image/*\"\r\n              style={{ display: \"none\" }}\r\n              ref={fileInputRef}\r\n              onChange={e => {\r\n                if (e.target.files && e.target.files[0]) {\r\n                  const reader = new FileReader();\r\n                  reader.onload = ev => setCapturedImage(ev.target.result);\r\n                  reader.readAsDataURL(e.target.files[0]);\r\n                }\r\n              }}\r\n            />\r\n          </>\r\n        ) : (\r\n          <>\r\n            <Button variant=\"outlined\" color=\"primary\" onClick={() => setCapturedImage(null)}>Retake Image</Button>\r\n            <Button variant=\"contained\" color=\"success\" onClick={handleUpload}>Upload</Button>\r\n          </>\r\n        )}\r\n        <Button onClick={() => { setCapturedImage(null); onClose(); }}>Close</Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default CameraCapture; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}