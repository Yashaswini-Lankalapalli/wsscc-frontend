{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ASUS\\\\Documents\\\\ME\\\\Wallmart-hackathon\\\\walmart-wsscc\\\\frontend\\\\src\\\\components\\\\Dashboard\\\\CurrentProblems.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Box, Typography, Button, Dialog, DialogTitle, DialogContent, DialogActions, TextField } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CurrentProblems = () => {\n  _s();\n  const [notifyDialogOpen, setNotifyDialogOpen] = useState(false);\n  const [problemText, setProblemText] = useState(\"\");\n  return /*#__PURE__*/_jsxDEV(Box, {\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h5\",\n      gutterBottom: true,\n      children: \"Current Problems\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      sx: {\n        mb: 2\n      },\n      onClick: () => setNotifyDialogOpen(true),\n      children: \"Notify Other Stores\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: notifyDialogOpen,\n      onClose: () => setNotifyDialogOpen(false),\n      maxWidth: \"sm\",\n      fullWidth: true,\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        children: \"Notify Other Stores\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: /*#__PURE__*/_jsxDEV(TextField, {\n          label: \"Describe the problem\",\n          multiline: true,\n          rows: 4,\n          value: problemText,\n          onChange: e => setProblemText(e.target.value),\n          fullWidth: true,\n          margin: \"normal\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => setNotifyDialogOpen(false),\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"primary\",\n          onClick: () => {\n            setNotifyDialogOpen(false);\n            setProblemText(\"\"); /* Add notify logic here */\n          },\n          children: \"Notify\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Current Problems content goes here.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }, this);\n};\n_s(CurrentProblems, \"Ws0ghI4r+GYbRxiLFnP5d0yaopE=\");\n_c = CurrentProblems;\nexport default CurrentProblems;\nvar _c;\n$RefreshReg$(_c, \"CurrentProblems\");","map":{"version":3,"names":["React","useState","Box","Typography","Button","Dialog","DialogTitle","DialogContent","DialogActions","TextField","jsxDEV","_jsxDEV","CurrentProblems","_s","notifyDialogOpen","setNotifyDialogOpen","problemText","setProblemText","children","variant","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","color","sx","mb","onClick","open","onClose","maxWidth","fullWidth","label","multiline","rows","value","onChange","e","target","margin","_c","$RefreshReg$"],"sources":["C:/Users/ASUS/Documents/ME/Wallmart-hackathon/walmart-wsscc/frontend/src/components/Dashboard/CurrentProblems.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { Box, Typography, Button, Dialog, DialogTitle, DialogContent, DialogActions, TextField } from '@mui/material';\r\n\r\nconst CurrentProblems = () => {\r\n  const [notifyDialogOpen, setNotifyDialogOpen] = useState(false);\r\n  const [problemText, setProblemText] = useState(\"\");\r\n\r\n  return (\r\n    <Box>\r\n      <Typography variant=\"h5\" gutterBottom>Current Problems</Typography>\r\n      <Button variant=\"contained\" color=\"primary\" sx={{ mb: 2 }} onClick={() => setNotifyDialogOpen(true)}>\r\n        Notify Other Stores\r\n      </Button>\r\n      <Dialog open={notifyDialogOpen} onClose={() => setNotifyDialogOpen(false)} maxWidth=\"sm\" fullWidth>\r\n        <DialogTitle>Notify Other Stores</DialogTitle>\r\n        <DialogContent>\r\n          <TextField\r\n            label=\"Describe the problem\"\r\n            multiline\r\n            rows={4}\r\n            value={problemText}\r\n            onChange={e => setProblemText(e.target.value)}\r\n            fullWidth\r\n            margin=\"normal\"\r\n          />\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={() => setNotifyDialogOpen(false)}>Cancel</Button>\r\n          <Button variant=\"contained\" color=\"primary\" onClick={() => { setNotifyDialogOpen(false); setProblemText(\"\"); /* Add notify logic here */ }}>\r\n            Notify\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n      <div>Current Problems content goes here.</div>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default CurrentProblems; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}